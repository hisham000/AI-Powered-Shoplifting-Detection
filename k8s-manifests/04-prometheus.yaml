apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: eece-503n
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
      - job_name: 'eep'
        metrics_path: '/metrics'
        static_configs:
          - targets: ['eep.eece-503n.svc.cluster.local:8000']

      - job_name: 'iep1_binary_human_detection'
        metrics_path: '/metrics'
        static_configs:
          - targets: ['iep1.eece-503n.svc.cluster.local:5001']

      - job_name: 'iep2_shoplifting_detection'
        metrics_path: '/metrics'
        static_configs:
          - targets: ['iep2.eece-503n.svc.cluster.local:5002']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: eece-503n
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--web.console.libraries=/etc/prometheus/console_libraries"
        - "--web.console.templates=/etc/prometheus/consoles"
        - "--web.enable-lifecycle"
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: prometheus-storage
          mountPath: /prometheus
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: eece-503n
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
  type: NodePort