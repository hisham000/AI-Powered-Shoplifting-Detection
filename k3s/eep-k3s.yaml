# 1. Namespace (keeps shoplifting-stack resources together)
apiVersion: v1
kind: Namespace
metadata:
  name: shoplift
---
# 2. Persistent storage for /app/data
#    Uses k3s’s built-in “local-path” dynamic provisioner
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: eep-data
  namespace: shoplift
spec:
  accessModes: [ReadWriteOnce]
  storageClassName: local-path # default in k3s
  resources:
    requests:
      storage: 10Gi # adjust as you like
---
# 3. Deployment: 1 replica of jadshaker/eep:latest
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eep-deployment
  namespace: shoplift
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eep
  template:
    metadata:
      labels:
        app: eep
    spec:
      containers:
        - name: eep
          image: jadshaker/eep:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8000 # EEP’s API
          volumeMounts:
            - name: eep-data
              mountPath: /app/data # mirrors your docker-run
          env:
            - name: IEP1_URL
              value: http://iep1:5001
            - name: IEP2_URL
              value: http://iep2:5002
      volumes:
        - name: eep-data
          persistentVolumeClaim:
            claimName: eep-data
---
# 4. Service: expose EEP inside cluster + (optionally) outside
apiVersion: v1
kind: Service
metadata:
  name: eep
  namespace: shoplift
spec:
  selector:
    app: eep
  ports:
    - port: 8000 # cluster-internal port
      targetPort: 8000
      nodePort: 30080 # comment out if you **don’t** want NodePort
  type: NodePort # k3s will listen on <node-IP>:30080
